[{"/home/bruno/projects/tintantrico/src/index.js":"1","/home/bruno/projects/tintantrico/src/App.js":"2","/home/bruno/projects/tintantrico/src/routes.js":"3","/home/bruno/projects/tintantrico/src/components/ScrollToTop.js":"4","/home/bruno/projects/tintantrico/src/pages/HomePage/index.js":"5","/home/bruno/projects/tintantrico/src/pages/HomePage/styles.js":"6","/home/bruno/projects/tintantrico/src/pages/SignUpPage/index.js":"7","/home/bruno/projects/tintantrico/src/pages/SignUpPage/styles.js":"8","/home/bruno/projects/tintantrico/src/components/Logo/index.js":"9","/home/bruno/projects/tintantrico/src/components/Logo/styles.js":"10","/home/bruno/projects/tintantrico/src/pages/PeoplePage/index.js":"11","/home/bruno/projects/tintantrico/src/pages/PeoplePage/styles.js":"12","/home/bruno/projects/tintantrico/src/components/Modal/index.js":"13","/home/bruno/projects/tintantrico/src/components/Modal/useLocationHash.js":"14","/home/bruno/projects/tintantrico/src/components/Modal/styles.js":"15"},{"size":196,"mtime":1608466890517,"results":"16","hashOfConfig":"17"},{"size":165,"mtime":1608468076233,"results":"18","hashOfConfig":"17"},{"size":686,"mtime":1608583512553,"results":"19","hashOfConfig":"17"},{"size":277,"mtime":1608465139037,"results":"20","hashOfConfig":"17"},{"size":863,"mtime":1608552101794,"results":"21","hashOfConfig":"17"},{"size":1115,"mtime":1608637824432,"results":"22","hashOfConfig":"17"},{"size":7428,"mtime":1608583634480,"results":"23","hashOfConfig":"17"},{"size":3709,"mtime":1608728283033,"results":"24","hashOfConfig":"17"},{"size":229,"mtime":1608726348421,"results":"25","hashOfConfig":"17"},{"size":459,"mtime":1608726340817,"results":"26","hashOfConfig":"17"},{"size":6970,"mtime":1608726960916,"results":"27","hashOfConfig":"17"},{"size":4759,"mtime":1608727972458,"results":"28","hashOfConfig":"17"},{"size":4564,"mtime":1608693241638,"results":"29","hashOfConfig":"17"},{"size":535,"mtime":1601221561037,"results":"30","hashOfConfig":"17"},{"size":659,"mtime":1608640065911,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mahm1m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/bruno/projects/tintantrico/src/index.js",[],["67","68"],"/home/bruno/projects/tintantrico/src/App.js",[],"/home/bruno/projects/tintantrico/src/routes.js",[],"/home/bruno/projects/tintantrico/src/components/ScrollToTop.js",[],"/home/bruno/projects/tintantrico/src/pages/HomePage/index.js",[],"/home/bruno/projects/tintantrico/src/pages/HomePage/styles.js",[],"/home/bruno/projects/tintantrico/src/pages/SignUpPage/index.js",[],"/home/bruno/projects/tintantrico/src/pages/SignUpPage/styles.js",[],"/home/bruno/projects/tintantrico/src/components/Logo/index.js",[],"/home/bruno/projects/tintantrico/src/components/Logo/styles.js",[],"/home/bruno/projects/tintantrico/src/pages/PeoplePage/index.js",["69"],"import {useState,useEffect} from 'react';\nimport {AnimatePresence} from 'framer-motion';\nimport Modal from '../../components/Modal';\nimport {\n    Container,\n    PersonWrapper,\n    Person,\n    Controls,\n    Button,\n    NopeIcon,\n    LikeIcon,\n    PersonInfo,\n    DailyLikesIsOver,\n    IsOverIcon,\n    TantricMatch,\n    IntentioPrimaSemper,\n    LogoWrapper,\n    CloseIcon,\n} from './styles';\nimport Logo from '../../components/Logo';\n\n\n// ANIMATION\nconst personAnimate = {\n    initial: {rotate: '0deg', x: 0, opacity: 1 },\n    like: {rotate: '45deg', x: '100%', opacity: 0 },\n    nope: {rotate: '-45deg', x: '-100%', opacity: 0 },\n}\n\nconst People = () => {\n\n    const [people, setPeople] = useState([\n        {\n            name: 'Ester Lampard',\n            age: 23,\n            info: 'Nutricionista',\n            img: 'ester.jpg',\n            liked: true,\n        },{\n            name: 'Sheron Barbosa',\n            age: 24,\n            info: 'Publicitária',\n            img: 'sheron.jpg',\n            liked: true,\n        },{\n            name: 'Lucia Meneses',\n            age: 29,\n            info: 'Pintura Artistica',\n            img: 'lucia.jpg',\n            liked: true,\n        },{\n            name: 'Marieva Santos',\n            age: 27,\n            info: 'UI Designer',\n            img: 'marieva.jpg',\n            liked: true,\n        },{\n            name: 'Natacha Nogueira',\n            age: 28,\n            info: 'Empresaria Digital',\n            img: 'natacha.jpg',\n            liked: true,\n        },{\n            name: 'Tabata Cury',\n            age: 23,\n            info: 'Software Engineer',\n            img: 'tabata.jpg',\n            liked: false,\n        },{\n            name: 'Juliana Costa',\n            age: 27,\n            info: 'Engineering',\n            img: 'juliana.jpg',\n            liked: false,\n        },\n    ])\n\n    // modal dailyLikesIsOver\n    const [dailyLikesIsOver, setDailyLikesIsOver] = useState(false);\n\n    // modal tantricMatch\n    const [tantricMatch, setTantricMatch] = useState({\n        isOpen: false,\n        person: null\n    });\n\n    // modal intentioPrimaSemper\n    const [intentioPrimaSemper, setIntentioPrimaSemper] = useState(false);\n\n    useEffect( () => {\n        setTimeout(setIntentioPrimaSemper.bind(null,true), 4000)\n    }, [])\n\n    // ANIMATION\n    const [personAnimateExit, setPersonAnimateExit] = useState({})\n    \n    const btnControlsHandle = async action => {\n        \n        if (action === \"like\") await setPersonAnimateExit(personAnimate.like)\n        else await setPersonAnimateExit(personAnimate.nope)\n\n        if (people.length > 1) {\n            const newPeople = [...people];\n            const person = newPeople.pop();\n            setPeople(newPeople);\n\n            // match occurs?\n            if (action === 'like' && person.liked)\n                setTantricMatch({...tantricMatch, isOpen: true, person });\n\n        } else {\n            setDailyLikesIsOver(true);\n        }\n    }\n\n    return (\n        <Container>\n            <LogoWrapper>\n                <p>Tin<span>Tântrico</span></p>\n            </LogoWrapper>\n\n            <PersonWrapper>\n                <AnimatePresence>\n                {\n                    people.map( (person, i) => (\n                        <Person\n                            // animation\n                            initial={personAnimate.initial}\n                            exit={personAnimateExit}\n                            // and animation\n\n                            key={i}\n                            active={ (i===people.length-1) ? true: false }\n                        >\n                            <img src={require(`../../img/${person.img}`).default} alt={person.name}/>\n                            <PersonInfo>\n                                <h1>{person.name} <span>{person.age}</span></h1>\n                                <p>{person.info}</p>\n                            </PersonInfo>\n                        </Person>\n                    ))\n                }\n                </AnimatePresence>\n            </PersonWrapper>\n\n            <Controls>\n                <Button\n                    btnNope\n                    onClick={btnControlsHandle.bind(null, \"nope\")}\n                ><NopeIcon /></Button>\n                <Button\n                    btnLike\n                    onClick={btnControlsHandle.bind(null, \"like\")}\n                ><LikeIcon /></Button>\n            </Controls>\n\n            {/* Modal dailyLikesIsOver */}\n            <Modal\n                isOpen={dailyLikesIsOver}\n                onRequestClose={setDailyLikesIsOver.bind(null, false)}\n                btnClose={false}\n                locationHash=\"#daily-likes-is-over\"\n            >\n                <DailyLikesIsOver>\n                    <IsOverIcon />\n                    <p>Suas curtidas gratuitas de hoje acabaram.</p>\n                </DailyLikesIsOver>\n            </Modal>\n\n            {/* Modal TantricMatch */}\n            <Modal\n                isOpen={tantricMatch.isOpen}\n                onRequestClose={setTantricMatch.bind(null, false)}\n                btnClose={false}\n                locationHash=\"#tantric-match\"\n            >\n                <TantricMatch>\n                    {\n                        tantricMatch.person\n                            ?\n                            <>\n                                \n                                <div>\n                                    <CloseIcon onClick={setTantricMatch.bind(null, false)} />\n                                    <h1>It's a <span>TANTRIC</span> Match!</h1>\n                                    <p>Você e <b>{tantricMatch.person.name}</b> estão interessados em<br/><span>CONTEMPLAR UM AO OUTRO!</span></p>\n                                </div>\n\n                                <div>\n                                    <img src={require(`../../img/${tantricMatch.person.img}`).default} alt={tantricMatch.person.name}/>\n                                </div>\n                            </>\n                            : null\n                    }\n                </TantricMatch>\n            </Modal>\n            \n            {/* Modal intentioPrimaSemper */}\n            <Modal\n                isOpen={intentioPrimaSemper}\n                onRequestClose={ setIntentioPrimaSemper.bind(null, false) }\n                locationHash=\"#intentio-prima-semper\"\n                closeOnClickBackground={false}\n            >\n                <IntentioPrimaSemper>\n                    <p>Antes de começar, LEMBRE-SE:</p>\n                    <h1>Intentio Prima Semper</h1>\n                    <p>Tenha a mentalidade e a postura de ENTREGAR contemplação e energia genuína, primeiro, para depois ter a possibilidade de receber.</p>\n                    <button\n                        onClick={setIntentioPrimaSemper.bind(null, false)}\n                    >Combinado!</button>\n                </IntentioPrimaSemper>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default People;","/home/bruno/projects/tintantrico/src/pages/PeoplePage/styles.js",[],"/home/bruno/projects/tintantrico/src/components/Modal/index.js",["70","71"],"import React, { useEffect, useState, useRef } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport useLocationHash from './useLocationHash';\nimport { IconClose, ModalContent, ModalWrapper } from './styles';\n\n\n/**\n * Define the dimensions (height and width) of the children of this Modal with a unit of measure referring to the viewport (vh and vw).\n * so that Modal to adjust dinamicaly its dimensions to the dimensions of children.\n * \n * ex:\n * <Modal>\n *      <Content style={{ width: \"80vw\", height: \"50vh\" }} />\n * </Modal>\n */\nconst Modal = ({\n    isOpen,\n    onRequestClose = () => null,\n    btnClose = true,\n    closeOnEscapeKey = true,\n    closeOnClickBackground = true,\n    closeOnHistoryBack = true, // close on Browser history back\n    locationHash = '#modal', // the hash that will be setted to browser history when modal appears\n    children,\n}) => {\n    \n    const modalContentRef = useRef();\n    const [ centralizeModalContent, setCentralizeModalContent ] = useState({\n        modalContent: {top: '10%'},\n        iconClose: {top: '4%'}\n    });\n\n    // browser history changes the modal isOpen  \n    const hash = useLocationHash();\n    useEffect( () => {\n        if(closeOnHistoryBack) {\n            if (isOpen) {\n                if (!hash.endsWith(locationHash)) {\n                    onRequestClose();\n                }\n            }\n        }\n    }, [hash, closeOnHistoryBack]);\n\n\n    // close on escape key\n    useEffect( () => {\n        if (closeOnEscapeKey) {\n            const closeModalOnEscapeKey = event => (event.key === \"Escape\" ? onRequestClose() : false);\n            \n            window.addEventListener( 'keydown', closeModalOnEscapeKey );            \n            return () => window.removeEventListener( 'keydown', closeModalOnEscapeKey );\n        }\n        \n    }, [closeOnEscapeKey, onRequestClose]);\n\n    //\n    useEffect( () => {\n        if (isOpen){\n            // centralizing the ModalContent component\n            setCentralizeModalContent({\n                modalContent: {\n                    top: `calc( 50vh - ${modalContentRef.current.offsetHeight / 2}px)`,\n                    left: `calc(50vw - ${modalContentRef.current.offsetWidth / 2}px)`,\n                },\n                iconClose: {\n                    top: `calc( 50vh - ${modalContentRef.current.offsetHeight / 2}px - 40px)`,\n                    right: `calc(50vw - ${modalContentRef.current.offsetWidth / 2}px)`,\n                },\n            });\n\n            // seting the browser location hash when modal opens\n            if (closeOnHistoryBack) {\n                window.location.hash += locationHash;\n            }\n        } else {\n            // go back browser history when modal closes\n            if (hash.endsWith(locationHash)) {\n                if (closeOnHistoryBack) {\n                    window.history.back();\n                }\n            }\n        }\n    }, [isOpen] );\n\n    return (\n        <AnimatePresence>\n            { isOpen && (\n                <ModalWrapper\n                    initial={{ opacity: 0}}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >{\n                    closeOnClickBackground\n                    ?\n                        <div\n                            style={{ position: \"fixed\", top: 0, bottom: 0, left: 0, right: 0, }}\n                            onClick={onRequestClose}\n                        />\n                    : false\n                    }{\n                    btnClose\n                    ?\n                        <motion.div\n                            initial={{ fontSize: \"0rem\" }}\n                            animate={{ fontSize: \"2rem\", transition: { duration: 0.18} }}\n                            exit={{ fontSize: \"0rem\", transition: { duration: 0.1 } }}\n                        >\n                            <IconClose onClick={onRequestClose} style={centralizeModalContent.iconClose} />\n                        </motion.div>\n                    : false\n                    }\n\n                    <ModalContent\n                        initial={{ scale: 0, }}\n                        animate={{ scale: 1, }}\n                        exit={{ scale: 0, opacity: 0, borderRadius: \"20%\", transition: { duration: 0.15 } }}\n\n                        ref={modalContentRef}\n                        style={centralizeModalContent.modalContent}\n                        \n                    >{children}</ModalContent>\n\n                </ModalWrapper>\n            )}\n        </AnimatePresence>\n    )\n}\n\nexport default Modal;","/home/bruno/projects/tintantrico/src/components/Modal/useLocationHash.js",["72"],"import React, {useState,useEffect} from 'react';\n/**\n * return the value of 'window.location.hash', always the 'window.history' changes.\n */\nconst useLocationHash = () => {\n    const [hash, setHash] = useState(window.location.hash);\n\n    const listenToPopstate = () => setHash(`${window.location.hash}`);\n\n    useEffect( () => {\n        window.addEventListener('popstate', listenToPopstate);\n        return () => window.removeEventListener('popstate', listenToPopstate);\n    }, []);\n\n    return hash;\n}\n\nexport default useLocationHash;",["73","74"],"/home/bruno/projects/tintantrico/src/components/Modal/styles.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":20,"column":8,"nodeType":"81","messageId":"82","endLine":20,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":43,"column":8,"nodeType":"85","endLine":43,"endColumn":34,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":84,"column":8,"nodeType":"85","endLine":84,"endColumn":16,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isOpen', 'locationHash', and 'onRequestClose'. Either include them or remove the dependency array. If 'onRequestClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'closeOnHistoryBack', 'hash', and 'locationHash'. Either include them or remove the dependency array.",["95"],"'React' is defined but never used.",["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [hash, closeOnHistoryBack, isOpen, locationHash, onRequestClose]",{"range":"100","text":"101"},"Update the dependencies array to be: [closeOnHistoryBack, hash, isOpen, locationHash]",{"range":"102","text":"103"},[1393,1419],"[hash, closeOnHistoryBack, isOpen, locationHash, onRequestClose]",[2907,2915],"[closeOnHistoryBack, hash, isOpen, locationHash]"]